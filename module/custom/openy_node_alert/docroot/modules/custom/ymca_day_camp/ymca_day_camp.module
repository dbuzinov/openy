<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_presave().
 */
function ymca_day_camp_entity_presave(EntityInterface $entity) {
  // If user switched the post to day camp field section should be removed.
  // If user associated the post to some camp, day camp checkbox should be removed.
  if ($entity->getEntityTypeId() == 'node') {
    if ($entity->bundle() == 'blog') {
      // Do not process new nodes.
      if ($entity->isNew()) {
        return;
      }

      $field_related = 'field_related_camps_locations';
      $field_section = 'field_site_section';

      // Check whether the fields are present.
      if (!$entity->hasField($field_related) || !$entity->hasField($field_section)) {
        return;
      }

      $original = $entity->original;

      $related['new'] = $entity->get($field_related);
      $related['original'] = $original->get($field_related);
      if (!$related['new']->isEmpty() && $related['original']->isEmpty()) {
        $section['new'] = $entity->get($field_section);
        foreach ($section['new'] as $index => $item) {
          unset($section['new'][$index]);
        }
        return;
      }

      $section['new'] = $entity->get($field_section);
      $section['original'] = $original->get($field_section);
      if (!$section['new']->isEmpty() && $section['original']->isEmpty()) {
        $related['new'] = $entity->get($field_related);
        foreach ($related['new'] as $index => $item) {
          unset($related['new'][$index]);
        }
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function ymca_day_camp_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!in_array($form_id, ['node_blog_edit_form', 'node_blog_form'])) {
    return;
  }

  // Default value for day_camp_news checkbox.
  $default = FALSE;
  if ($form_id == 'node_blog_edit_form') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if (isset($node) && $node->hasField('field_related_camps_locations')) {
      $field = $node->get('field_related_camps_locations');
      if ($field->isEmpty() === FALSE) {
        $default = TRUE;
      }
    }
  }

  // Add day camps logic to the blog.
  $form['day_camp_news'] = [
    '#type' => 'checkbox',
    '#title' => t('Day camp news'),
    '#description' => t('Toggle the checkbox if this blog post is shared between several camps or locations.'),
    '#default_value' => $default,
  ];

  $form['field_site_section']['#states'] = [
    'invisible' => [
      ':input[name="day_camp_news"]' => ['checked' => TRUE],
    ],
  ];

  $form['field_related_camps_locations']['#states'] = [
    'invisible' => [
      ':input[name="day_camp_news"]' => ['checked' => FALSE],
    ],
  ];
}
