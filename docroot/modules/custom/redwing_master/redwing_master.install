<?php

/**
 * @file
 * Installation file for the module.
 */

use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Core\Database\DatabaseExceptionWrapper;
use Drupal\field\Entity\FieldConfig;
use Drupal\node\Entity\Node;
use Drupal\views\Entity\View;
use Drupal\redirect\Entity\Redirect;

define('REDWING_CONFDIR', 'sites/ymca_redwing/config/staging/');

/**
 * Remove Groupex.
 */
function redwing_master_update_8001() {
  $installer = \Drupal::service('module_installer');

  $installer->uninstall(['ymca_sync']);
  $installer->uninstall(['ymca_groupex'], TRUE);
  $installer->uninstall(['ymca_groupex_form_cache'], TRUE);
  $installer->uninstall(['ymca_google'], TRUE);
  $installer->uninstall(['ymca_master']);
}

/**
 * Disable title header search form for Redwing.
 */
function redwing_master_update_8002() {
  \Drupal::service('config_import.importer')->importConfigs(
    [
      REDWING_CONFDIR . 'ymca.settings.yml',
    ]
  );
}

/**
 * Set proper permissions.
 */
function redwing_master_update_8003() {
  \Drupal::service('config_import.importer')->importConfigs(
    [
      REDWING_CONFDIR . 'user.role.anonymous.yml',
      REDWING_CONFDIR . 'user.role.authenticated.yml',
    ]
  );
}

/**
 * Fix deleted fields problem.
 */
function redwing_master_update_8004() {
  // Get all corrupted deleted fields.
  $corrupted = [];

  // We have some deleted fields in the queue, which are corrupted.
  // 1. Without database table.
  // 2. Without parent entity type.
  // We are going to detect these fields and simply remove.
  // That will give us ability to run field_cron() cleanly.
  $fields = entity_load_multiple_by_properties(
    'field_config',
    [
      'deleted' => TRUE,
      'include_deleted' => TRUE,
    ]
  );
  foreach ($fields as $field) {
    $entity_type = $field->getTargetEntityTypeId();

    try {
      \Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 50);
    }
    catch (DatabaseExceptionWrapper $e) {
      // The field without DB table.
      $corrupted[] = $field->id();
    }
    catch (PluginNotFoundException $e) {
      // The field without entity type (example, comment).
      $corrupted[] = $field->id();
    }
  }

  $state = \Drupal::service('state');
  $deleted = $state->get('field.field.deleted');

  foreach ($deleted as $item) {
    if (in_array($item['id'], $corrupted)) {
      unset($deleted[$item['uuid']]);
    }
  }

  $state->set('field.field.deleted', $deleted);

  // Eventually purge deleted fields.
  field_cron();
}

/**
 * Remove workflow.
 */
function redwing_master_update_8005() {
  $field_name = 'field_state';
  $bundles = ['blog', 'article'];

  foreach ($bundles as $bundle) {
    $field_config = FieldConfig::loadByName('node', $bundle, $field_name);
    $field_storage = $field_config->getFieldStorageDefinition();

    if ($field_storage && !$field_storage->isLocked()) {
      $field_config->delete();
      $msg = 'The field %field has been deleted from the %type content type.';
      \Drupal::logger('redwing_master')->info(
        $msg,
        ['%field' => $field_name, '%type' => $bundle]
      );
    }
    else {
      $msg = 'There was a problem removing the %field from the %type content type.';
      \Drupal::logger('ymca_master')->error(
        $msg,
        ['%field' => $field_name, '%type' => $bundle]
      );
    }
  }

  // Eventually purge deleted fields.
  field_cron();

  // Remove needs review view.
  $view = View::load('needs_review');
  $view->delete();

  // Remove modules.
  $installer = \Drupal::service('module_installer');
  $modules = [
    'workflow_access',
    'workflow_operations',
    'workflow_ui',
    'ymca_workflow',
  ];
  $installer->uninstall($modules);
}

/**
 * Fix 'unpublish' bug for blog posts.
 */
function redwing_master_update_8006() {
  $items = \Drupal::entityQuery('node')
    ->condition('type', 'blog')
    ->execute();

  foreach ($items as $item) {
    $node = Node::load($item);
    $node->setPublished($node->isPublished());
    $node->save();
  }
}

/**
 * Add svg extension to config.
 */
function redwing_master_update_8007() {
  \Drupal::service('config_import.importer')->importConfigs(
    [
      REDWING_CONFDIR . 'file_entity.settings.yml',
      REDWING_CONFDIR . 'entity_browser.browser.browse_files_modal.yml',
      REDWING_CONFDIR . 'entity_browser.browser.browse_files.yml',
    ]
  );
}

/**
 * Add svg extension to image fields config.
 */
function redwing_master_update_8008() {
  \Drupal::service('config_import.importer')->importConfigs(
    [
      REDWING_CONFDIR . 'field.field.block_content.image_block.field_image.yml',
      REDWING_CONFDIR . 'field.field.block_content.promo_block.field_image.yml',
      REDWING_CONFDIR . 'field.field.block_content.slide_show_item.field_image.yml',
      REDWING_CONFDIR . 'field.field.contact_message.camp_share_your_story.field_image.yml',
      REDWING_CONFDIR . 'field.field.node.article.field_header_image.yml',
      REDWING_CONFDIR . 'field.field.node.blog.field_image.yml',
      REDWING_CONFDIR . 'field.field.user.user.user_picture.yml',
    ]
  );
}

/**
 * Sets the iframe height.
 */
function redwing_master_update_8009() {
  $node = Node::load(4201);
  $node->field_content->format = 'full_html';
  $node->field_content->value = '<iframe frameborder="0" class="no-resize" src="http://www.activelifeadmin.com/redwing/websearch/public" style="width:100%; height:1900px"></iframe>';
  $node->save();
}

/**
 * YMCA-1194: Bulk block deletion.
 */
function redwing_master_update_8010() {
  \Drupal::service('module_installer')->install(['bulk_actions'], TRUE);
}

/**
 * YMCA-1175: Disable mobile menu sign in.
 */
function redwing_master_update_8011() {
  \Drupal::service('config_import.importer')->importConfigs(
    [
      REDWING_CONFDIR . 'ymca.settings.yml',
    ]
  );
}

/**
 * YMCA-1237: Setup google analytics.
 */
function redwing_master_update_8012() {
  \Drupal::service('module_installer')->install(['google_analytics'], TRUE);
  // Uninstall unused module for now.
  \Drupal::service('module_installer')->uninstall(['google_tag']);

  \Drupal::service('config_import.importer')->importConfigs(
    [
      REDWING_CONFDIR . 'google_analytics.settings.yml',
    ]
  );
}

/**
 * Remove MindBody Cache Proxy module.
 */
function redwing_master_update_8013() {
  $installer = \Drupal::service('module_installer');
  $logger = \Drupal::logger('redwing_master');

  $installer->uninstall(['mindbody_cache_proxy']);
  $logger->info('Mindbody Cache Proxy has been uninstalled.');
}

/**
 * Remove MindBody API module.
 */
function redwing_master_update_8014() {
  $installer = \Drupal::service('module_installer');
  $logger = \Drupal::logger('redwing_master');

  $installer->uninstall(['mindbody']);
  $logger->info('Mindbody API has been uninstalled.');
}

/**
 * Remove Ymca Groupex Google Cache module.
 */
function redwing_master_update_8015() {
  $installer = \Drupal::service('module_installer');
  $logger = \Drupal::logger('redwing_master');

  $installer->uninstall(['ymca_groupex_google_cache']);
  $logger->info('YMCA Groupex Google Cache has been uninstalled.');
}

/**
 * Remove Groupex Form Cache module.
 */
function redwing_master_update_8016() {
  $installer = \Drupal::service('module_installer');
  $logger = \Drupal::logger('redwing_master');

  $installer->uninstall(['groupex_form_cache']);
  $logger->info('Groupex Form Cache has been uninstalled.');
}

/**
 * YMCA-1264: Fix camp register button.
 */
function redwing_master_update_8017() {
  // Create new field.
  \Drupal::service('config_import.importer')->importConfigs(
    [
      REDWING_CONFDIR . 'core.entity_form_display.node.camp.default.yml',
      REDWING_CONFDIR . 'core.entity_view_display.node.camp.default.yml',
      REDWING_CONFDIR . 'field.field.node.camp.field_register_button_link.yml',
      REDWING_CONFDIR . 'field.storage.node.field_register_button_link.yml',
    ]
  );

  // Set field value.
  $camp = Node::load(34);
  $value = [
    'uri' => 'https://ops1.operations.daxko.com/Online/2061/Programs/search.mvc/programs?category_ids=9794',
  ];
  $camp->set('field_register_button_link', $value);
  $camp->save();
}

/**
 * YMCA-1278: Disable ymca_membership page.
 */
function redwing_master_update_8018() {
  $installer = \Drupal::service('module_installer');
  $logger = \Drupal::logger('redwing_master');

  $installer->uninstall(['ymca_membership']);
  $logger->info('YMCA Membership has been uninstalled.');

  // Update membership alias.
  $query = \Drupal::database()->update('url_alias');
  $query->fields([
    'alias' => '/membership',
  ]);
  $query->condition('pid', '4836');
  $query->execute();

  // Create redirect from /membership1 to membership.
  $redirect = Redirect::create();
  $redirect->setSource('membership1');
  $redirect->setRedirect('node/4211');
  $redirect->setStatusCode(\Drupal::config('redirect.settings')->get('default_status_code'));
  $redirect->save();
}

/**
 * Add Redwing Alters.
 */
function redwing_master_update_8019() {
  $installer = \Drupal::service('module_installer');
  $installer->install(['redwing_alters']);
}

/**
 * Add a view to remove menu items in a bulk.
 */
function redwing_master_update_8020() {
  \Drupal::service('config_import.importer')->importConfigs(
    [
      'modules/custom/bulk_actions/config/install/views.view.bulk_actions_menu_link_content.yml',
    ]
  );
}
