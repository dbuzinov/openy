<?php

/**
 * @file
 * Contains ab.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function ab_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ab module.
    case 'help.page.ab':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('AB Testing FrameWork') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_page_attachments().
 */
function ab_page_attachments(array &$attachments) {

  $config = \Drupal::config('ab.settings');
  $block_builder = \Drupal::getContainer()
    ->get('entity.manager')
    ->getViewBuilder('block');
  $renderer = \Drupal::service('renderer');

  $replacements = $config->get('replacements');
  $ab_state = $config->get('ab');
  foreach ($replacements as &$item) {
    // Remove elements matching the selector if block_id isn't specified.
    if (!$item['block_id']) {
      $item['html'] = '';
      continue;
    }
    $block = \Drupal\block\Entity\Block::load($item['block_id']);
    if ($block) {
      // Replace elements matching the selector if block_id is specified.
      $build = $block_builder->lazyBuilder($item['block_id'], 'full');
      $item['html'] = (string) $renderer->renderRoot($build);
    }
  }
  unset($item);
  if (\Drupal::currentUser()->hasPermission('access AB variants')) {
    $attachments['#attached']['library'][] = 'ab/ab_generic';
    $attachments['#attached']['drupalSettings']['ab'] = $replacements;
    $attachments['#attached']['drupalSettings']['ab_state'] = $ab_state;
  }
  else {
    $attachments['#attached']['drupalSettings']['ab_state'] = FALSE;
  }
}
