From c61a5f337e1facc6087d90fa8c5c72e844344920 Mon Sep 17 00:00:00 2001
From: Alex Pott
Date: Wed, 11 May 2016 11:07:48 -0500
Subject: Issue #2700495 by ronaldtebrake, droplet, samuel.mortenson, nod_:
 Method removing expired drupalSettings.ajax tries to remove settings when
 there is no ajax defined

---
 core/misc/ajax.js                                  |  2 +-
 .../FunctionalJavascript/ExposedFilterAJAXTest.php | 83 ++++++++++++++++++++++
 2 files changed, 84 insertions(+), 1 deletion(-)
 create mode 100644 core/modules/views/tests/src/FunctionalJavascript/ExposedFilterAJAXTest.php

diff --git a/core/misc/ajax.js b/core/misc/ajax.js
index 507a40b..5001554 100644
--- a/core/misc/ajax.js
+++ b/core/misc/ajax.js
@@ -1210,7 +1210,7 @@
         // Ajax behavior.
         if (instance.selector) {
           var selector = instance.selector.replace('#', '');
-          if (selector in ajaxSettings) {
+          if (ajaxSettings && selector in ajaxSettings) {
             delete ajaxSettings[selector];
           }
         }
diff --git a/core/modules/views/tests/src/FunctionalJavascript/ExposedFilterAJAXTest.php b/core/modules/views/tests/src/FunctionalJavascript/ExposedFilterAJAXTest.php
new file mode 100644
index 0000000..15ef650
--- /dev/null
+++ b/core/modules/views/tests/src/FunctionalJavascript/ExposedFilterAJAXTest.php
@@ -0,0 +1,83 @@
+<?php
+
+namespace Drupal\Tests\views\FunctionalJavascript;
+
+use Drupal\FunctionalJavascriptTests\JavascriptTestBase;
+use Drupal\simpletest\ContentTypeCreationTrait;
+use Drupal\simpletest\NodeCreationTrait;
+
+/**
+ * Tests the basic AJAX functionality of Views exposed forms.
+ *
+ * @group views
+ */
+class ExposedFilterAJAXTest extends JavascriptTestBase {
+
+  use ContentTypeCreationTrait;
+  use NodeCreationTrait;
+
+  /**
+   * {@inheritdoc}
+   */
+  public static $modules = ['node', 'views'];
+
+  /**
+   * Tests if exposed filtering via AJAX works for the "Content" View.
+   */
+  public function testExposedFiltering() {
+    // Enable AJAX on the /admin/content View.
+    \Drupal::configFactory()->getEditable('views.view.content')
+      ->set('display.default.display_options.use_ajax', TRUE)
+      ->save();
+
+    // Create a Content type and two test nodes.
+    $this->createContentType(['type' => 'page']);
+    $this->createNode(['title' => 'Page One']);
+    $this->createNode(['title' => 'Page Two']);
+
+    // Create a user privileged enough to use exposed filters and view content.
+    $user = $this->drupalCreateUser([
+      'administer site configuration',
+      'access content',
+      'access content overview',
+    ]);
+    $this->drupalLogin($user);
+
+    // Visit the View page.
+    $this->drupalGet('admin/content');
+
+    $session = $this->getSession();
+
+    // Ensure that the Content we're testing for is present.
+    $html = $session->getPage()->getHtml();
+    $this->assertContains('Page One', $html);
+    $this->assertContains('Page Two', $html);
+
+    // Search for "Page One".
+    $this->submitForm(['title' => 'Page One'], t('Filter'));
+    $this->waitForAjaxToFinish();
+
+    // Verify that only the "Page One" Node is present.
+    $html = $session->getPage()->getHtml();
+    $this->assertContains('Page One', $html);
+    $this->assertNotContains('Page Two', $html);
+
+    // Search for "Page Two".
+    $this->submitForm(['title' => 'Page Two'], t('Filter'));
+    $this->waitForAjaxToFinish();
+
+    // Verify that only the "Page Two" Node is present.
+    $html = $session->getPage()->getHtml();
+    $this->assertContains('Page Two', $html);
+    $this->assertNotContains('Page One', $html);
+  }
+
+  /**
+   * Waits for jQuery to become active and animations to complete.
+   */
+  protected function waitForAjaxToFinish() {
+    $condition = "(0 === jQuery.active && 0 === jQuery(':animated').length)";
+    $this->assertJsCondition($condition, 10000);
+  }
+
+}
-- 
cgit v0.12

