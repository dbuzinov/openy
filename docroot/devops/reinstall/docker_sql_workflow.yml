---
# This script contains commands to manage "Docker SQL workflow":
# - Running registry rebuild (when modules have been moved to new directory)
# - Running database updates

- name: Exising container name is...
  debug: msg={{ existing_container_name }}
  when: existing_container_name is defined

# Vagrant build.
- name: Delete old container
  shell: docker rm -f {{ mysql_db }}
  when: existing_container_name is undefined and (pp_environment == "default" and ((ansible_env.USER is not defined or ansible_env.USER != "{{ ci_server_username }}") and (ansible_env.SUDO_USER is not defined or ansible_env.SUDO_USER != "{{ ci_server_username }}")))
  ignore_errors: true

- name: Enable insecure registry for docker
  lineinfile: dest='/etc/docker/daemon.json' line='{ "insecure-registries":["{{ docker_registry }}"] }' create=yes
  when: docker_registry is defined and existing_container_name is undefined and (pp_environment == "default" and ((ansible_env.USER is not defined or ansible_env.USER != "{{ ci_server_username }}") and (ansible_env.SUDO_USER is not defined or ansible_env.SUDO_USER != "{{ ci_server_username }}")))
  sudo: yes

- name: Restart docker with new settings
  shell: service docker restart
  when: docker_registry is defined and existing_container_name is undefined and (pp_environment == "default" and ((ansible_env.USER is not defined or ansible_env.USER != "{{ ci_server_username }}") and (ansible_env.SUDO_USER is not defined or ansible_env.SUDO_USER != "{{ ci_server_username }}")))
  sudo: yes

- name: Update source image
  shell: docker pull {{ docker_prod_image }}

- name: Run docker network
  shell: docker network create --subnet=172.18.0.0/16 buildnet
  ignore_errors: true

# Run docker container.
- name: Obtain unique container for a build
  shell: docker run --net buildnet --ip {{ docker_sql_host }} --name {{ mysql_db }} -di {{ docker_prod_image }}
  when: existing_container_name is undefined

- name: Run mysql within docker container
  shell: docker exec {{ mysql_db }} service mysql start
  when: existing_container_name is undefined

- name: Run mysql within docker container
  shell: docker exec {{ existing_container_name }} service mysql start
  when: existing_container_name is defined

# Run registry rebuild.
- name: Check if registry_rebuild is installed
  shell: "{{ php_env_vars }} drush | grep -c registry_rebuild"
  register: registry_rebuild_installed
  ignore_errors: true

- name: Downloading registry_rebuild
  sudo: yes
  shell: "{{ php_env_vars }} drush -y dl registry_rebuild"
  when: rebuild_registry and registry_rebuild_installed.stdout == "0"

- name: Clear drush cache
  sudo: yes
  shell: "{{ php_env_vars }} drush cc drush"

- name: Rebuilding drupal registry
  sudo: yes
  shell: "{{ php_env_vars }} drush -y rr -l {{ site_url }} || true"
  when: rebuild_registry

# @todo remove following commands after deploy to production.
- name: Updating system module
  sudo: yes
  shell: "bin/drupal update:execute system"
- name: Updating serialization module
  sudo: yes
  shell: "bin/drupal update:execute serialization"
- name: Updating syslog module
  sudo: yes
  shell: "bin/drupal update:execute syslog"
- name: Updating file module
  sudo: yes
  shell: "bin/drupal update:execute file"
- name: Updating node module
  sudo: yes
  shell: "bin/drupal update:execute node"
- name: Updating rest module
  sudo: yes
  shell: "bin/drupal update:execute rest"
- name: Updating dropzonejs module
  sudo: yes
  shell: "bin/drupal update:execute dropzonejs"

- name: Updating YMCA master 8232 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8232"
- name: Updating YMCA master 8233 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8233"
- name: Updating YMCA master 8234 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8234"
- name: Updating YMCA master 8235 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8235"
- name: Updating YMCA master 8236 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8236"
- name: Updating YMCA master 8237 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8237"
- name: Updating YMCA master 8238 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8238"
- name: Updating YMCA master 8239 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8239"
- name: Updating YMCA master 8240 module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master 8240"
- name: Updating remaining hooks in the YMCA master module
  sudo: yes
  shell: "bin/drupal update:execute ymca_master"
- name: Updating webform module
  sudo: yes
  shell: "bin/drupal update:execute webform"
- name: Updating redirect module
  sudo: yes
  shell: "bin/drupal update:execute redirect"
- name: Updating entity_browser module
  sudo: yes
  shell: "bin/drupal update:execute entity_browser"
- name: Updating file_browser module
  sudo: yes
  shell: "bin/drupal update:execute file_browser"
- name: Updating dropzonejs_eb_widget module
  sudo: yes
  shell: "bin/drupal update:execute dropzonejs_eb_widget"
- name: Updating crop module
  sudo: yes
  shell: "bin/drupal update:execute crop"
- name: Updating openy_media module
  sudo: yes
  shell: "bin/drupal update:execute openy_media"
- name: Updating openy_media_document module
  sudo: yes
  shell: "bin/drupal update:execute openy_media_document"
- name: Updating openy_media_video module
  sudo: yes
  shell: "bin/drupal update:execute openy_media_video"
- name: Updating openy_media_image module
  sudo: yes
  shell: "bin/drupal update:execute openy_media_image"
- name: Updating openy_node module
  sudo: yes
  shell: "bin/drupal update:execute openy_node"
- name: Updating openy_node_landing module
  sudo: yes
  shell: "bin/drupal update:execute openy_node_landing"
- name: Updating openy_txnm_color module
  sudo: yes
  shell: "bin/drupal update:execute openy_txnm_color"
- name: Updating openy_prgf_small_banner module
  sudo: yes
  shell: "bin/drupal update:execute openy_prgf_small_banner"
- name: Updating openy_prgf_simple_content module
  sudo: yes
  shell: "bin/drupal update:execute openy_prgf_simple_content"
- name: Updating openy_prgf_2c module
  sudo: yes
  shell: "bin/drupal update:execute openy_prgf_2c"
- name: Updating openy_block_custom_simple module
  sudo: yes
  shell: "bin/drupal update:execute openy_block_custom_simple"
- name: Updating openy_prgf module
  sudo: yes
  shell: "bin/drupal update:execute openy_prgf"
# @todo remove commands above after deploy to production.
# Update database.
- name: Updating database
  sudo: yes
  shell: "{{ php_env_vars }} drush -dvy updb -l {{ site_url }}"
