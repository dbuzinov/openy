<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_theme().
 */
function openy_map_theme() {
  $items = [
    'openy_map' => [
      'render element' => 'element',
    ],
  ];
  return $items;
}

/**
 * Implements hook_library_info_alter().
 */
function openy_map_library_info_alter(&$libraries, $extension) {
  if ($extension != 'openy_map') {
    return;
  }

  // Adding Google Maps API key.
  foreach ($libraries['openy_map']['js'] as $key => $value) {
    if ($key != 'https://maps.googleapis.com/maps/api/js') {
      continue;
    }
    $api_key = \Drupal::configFactory()->get('geolocation.settings')->get('google_map_api_key');
    unset($libraries['openy_map']['js'][$key]);
    $libraries['openy_map']['js'][$key . '?key=' . $api_key] = $value;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function openy_map_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $variables['elements']['#node'];
  $view_mode = $variables['elements']['#view_mode'];
  // Check for active types.
  $activeTypes = \Drupal::configFactory()->get('openy_map.settings')->get('active_types');
  $activeTypes = !empty($activeTypes) ? array_keys(array_filter($activeTypes)) : [];
  // Add universal template for all location content type teasers.
  if ($view_mode == 'teaser' && $node->hasField('field_location_coordinates') && in_array($node->bundle(), $activeTypes)) {
    $suggestions[] = 'node__location_type__teaser';
  }
}
