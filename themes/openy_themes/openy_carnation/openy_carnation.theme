<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Link;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_HOOK().
 *
 * Pass block region value to content so this can be used in
 * MYTHEME_theme_suggestions_menu_alter.
 */
function openy_carnation_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $region = Block::load($variables['elements']['#id'])->getRegion();
    $variables['content']['#attributes']['region'] = $region;
  }
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function openy_carnation_preprocess_page(array &$variables) {
  $variables['relative_logo_url'] = file_url_transform_relative(file_create_url(theme_get_setting('logo.url')));
}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function openy_carnation_preprocess_menu_local_task(array &$variables) {
  $link = $variables['element']['#link'];
  $url = $link['url'];
  $options = $url->getOptions();
  $url->setOptions($options + $link['localized_options']);
  $variables['item'] = Link::fromTextAndUrl($link['title'], $url);
}


/**
 * Implements hook_preprocess_input().
 *
 * Adds classes to inputs.
 */
function openy_carnation_preprocess_input(&$variables) {
  if ($variables['element']['#type'] == 'submit') {

    if ($variables['element']['#value'] == "Preview") {
      $variables['attributes']['class'][] = 'btn-secondary';
    }

    if (empty(array_intersect([
      'btn-primary',
      'btn-secondary',
      'btn-success',
      'btn-warning',
      'btn-danger',
      'btn-link',
      'btn-info',
    ], $variables['attributes']['class']))) {
      $variables['attributes']['class'][] = 'btn-primary';
    }
    if (!in_array('btn', $variables['attributes']['class'])) {
      $variables['attributes']['class'][] = 'btn';
    }
    else {
      $variables['attributes']['class'][] = 'btn';
      $variables['attributes']['class'][] = 'btn-primary';
      $variables['attributes'] = new Attribute($variables['attributes']);
    }
  }
  if ($variables['element']['#type'] == 'textfield'
    || $variables['element']['#type'] == 'email'
    || $variables['element']['#type'] == 'password') {
    $variables['attributes']['class'][] = 'form-control';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide region based menu suggestions.
 */
function openy_carnation_theme_suggestions_menu_alter(&$suggestions, array $variables) {
  if (isset($variables['attributes']['region'])) {
    $suggestions[] = 'menu__' . $variables['menu_name'] . '__' . $variables['attributes']['region'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function openy_carnation_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if (in_array('page__user__register', $suggestions)
    || in_array('page__user__register', $suggestions)
    || in_array('page__user__password', $suggestions)) {
    $suggestions[] = 'page__user__login';
  }
}


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * @param array $suggestions
 * @param array $variables
 * @param $hook
 */
function openy_rose_theme_suggestions_slick_alter(array &$suggestions, array $variables, $hook) {
  $types = [];
  foreach ($variables['element']['#items'] as $item) {
    $types[] = 'slick__' . $item['slide']['#node']->bundle();
  }
  $suggestions += array_unique($types);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function openy_carnation_theme_suggestions_radios_alter(array &$suggestions, array $variables, $hook) {
  $suggestions[] = 'radios__' . $variables['element']['#name'];
}

/**
 * Implements hook_theme_suggestions_form_alter().
 */
function openy_rose_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#form_id'])) {
    array_push($suggestions, 'form__' . $variables['element']['#form_id']);
  }
}

